version: '3.8'

services:
  python-est:
    build: .
    container_name: python-est-server
    ports:
      - "8443:8443"
    volumes:
      - ./data:/app/data
      - ./certs:/app/certs
      - ./logs:/app/logs
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - EST_CONFIG=/app/config.yaml
      - EST_ADMIN_PASSWORD=SecureAdminP@ss123
      - EST_TEST_PASSWORD=SecureTestP@ss123
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:8443/.well-known/est/cacerts"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - est-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: python-est-proxy
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - python-est
    restart: unless-stopped
    networks:
      - est-network
    profiles:
      - production

  # Optional: Database for scalable user management
  postgres:
    image: postgres:15-alpine
    container_name: python-est-db
    environment:
      - POSTGRES_DB=est_db
      - POSTGRES_USER=est_user
      - POSTGRES_PASSWORD=est_secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - est-network
    profiles:
      - database

networks:
  est-network:
    driver: bridge

volumes:
  postgres_data: